1> Create Project
npx react-native init CameraApp
cd CameraApp
npx react-native run-android
npm install --save react-native-vector-icons 
npm install react-native-camera
cd ios && pod install && cd ..

2> Add permissions
And we need to set up permissions for both Android and iOS. In the case of Android,
 we need to go to the android/app/src/main/AndroidManifest.xml file and add
/* Required *
<uses-permission android:name="android.permission.CAMERA"></uses-permission>
<uses-permission android:name="android.permission.RECORD_AUDIO"></uses-permission>
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"></uses-permission>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"></uses-permission>

3> AddLine
And we also need to include a few lines at android/app/build.gradle‍

android { 
 ... 
 defaultConfig { 
  ... 
  missingDimensionStrategy 'react-native-camera', 'general' /* insert this line */
 }
}

4> iOS Permissions
In the case of iOS we just need to edit ios/CameraApp/Info.plist and add inside <dict></dict>

<key>NSCameraUsageDescription</key><string>
<key>NSPhotoLibraryAddUsageDescription</key><string>
<key>NSPhotoLibraryUsageDescription</key><string>
<key>NSMicrophoneUsageDescription</key><string>

5> AVD Manager setting
Using your webcam as the camera of your emulator
The Android emulator comes with a nice feature that allows developers to use your laptop's webcam as the emulated device camera.
 To configure this we need to open Android Studio and search for the AVD Manager. We need to click on the pencil icon for the device
 we are emulating and that opens the Virtual Device Configuration screen. Then click on the Show Advanced Settings and
 the Camera option is now available for edition. It has two options Front and Back to decide which camera we are going to use, 
so click on the dropdown for the Back camera and select the Webcam0 option and then Finish. If you have the emulator running,
 you should restart it to apply the configuration. Unfortunately for the iOS simulator there is no similar option that I'm aware of,
 so you need to test things in a real device.‍

Taking a picture
Now that we have access to the camera, it is time to take a picture! So we are going to add a button to get the picture when pressed. 
Our components/Camera.js is going to look something like this
